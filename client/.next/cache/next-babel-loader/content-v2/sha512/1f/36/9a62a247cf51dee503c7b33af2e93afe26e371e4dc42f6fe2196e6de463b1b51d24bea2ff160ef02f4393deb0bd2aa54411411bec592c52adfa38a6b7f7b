{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dbob486/Documents/React/gotube/client/src/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport { createUploadLink } from 'apollo-upload-client';\nconst client = new ApolloClient({\n  link: createUploadLink({}),\n  cache: new InMemoryCache()\n});\nexport default function MyApp({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/dbob486/Documents/React/gotube/client/src/pages/_app.js"],"names":["ChakraProvider","ApolloClient","InMemoryCache","ApolloProvider","createUploadLink","client","link","cache","MyApp","Component","pageProps"],"mappings":";;;;;;;;;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,cAAtC,QAA4D,gBAA5D;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAkB;AAC/BK,EAAAA,IAAI,EAAEF,gBAAgB,CAAE,EAAF,CADS;AAI/BG,EAAAA,KAAK,EAAE,IAAIL,aAAJ;AAJwB,CAAlB,CAAf;AAOA,eAAe,SAASM,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AAEtD,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEL,MAAxB;AAAA,2BACE,QAAC,cAAD;AAAA,6BACE,QAAC,SAAD,oBAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD","sourcesContent":["import { ChakraProvider } from '@chakra-ui/react';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport { createUploadLink } from 'apollo-upload-client';\nconst client = new ApolloClient ({\n  link: createUploadLink( {\n    \n  }),\n  cache: new InMemoryCache,\n})\n\nexport default function MyApp({ Component, pageProps }) {\n\n  return (\n    <ApolloProvider client={client}>\n      <ChakraProvider>\n        <Component {...pageProps} />\n      </ChakraProvider>\n    </ApolloProvider>\n  )\n}"]},"metadata":{},"sourceType":"module"}